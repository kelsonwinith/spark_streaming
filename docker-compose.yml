version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "29092:29092"

  spark-master:
    image: bitnami/spark:latest
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_MASTER_WEBUI_PORT=8080
      - SPARK_LOG_DIR=/opt/spark/logs
      - SPARK_MASTER_LOG=/opt/spark/logs/spark-master.out
    ports:
      - "7077:7077"
      - "8080:8080"
    volumes:
      - spark-logs:/opt/spark/logs

  spark-worker:
    image: bitnami/spark:latest
    container_name: spark-worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_WORKER_WEBUI_PORT=8081
      - SPARK_LOG_DIR=/opt/spark/logs
      - SPARK_WORKER_LOG=/opt/spark/logs/spark-worker.out
    ports:
      - "8081:8081"
    volumes:
      - spark-logs:/opt/spark/logs
    depends_on:
      - spark-master

  spark-history-server:
    image: bitnami/spark:latest
    container_name: spark-history-server
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER_DISABLED=true
      - SPARK_DAEMON_MEMORY=1G
      - SPARK_HISTORY_OPTS=-Dspark.history.ui.port=18080 -Dspark.history.fs.logDirectory=/opt/spark/logs -Dspark.history.retainedApplications=50
    ports:
      - "18080:18080"
    volumes:
      - spark-logs:/opt/spark/logs
    depends_on:
      - spark-master

  spark:
    build:
      context: .
      dockerfile: dockerfile.stream_spark
    container_name: stream_spark
    volumes:
      - .:/app
      - ~/.ivy2:/root/.ivy2
      - spark-logs:/opt/spark/logs
    working_dir: /app
    command: ["python", "stream_spark.py"]
    environment:
      - PYSPARK_PYTHON=python3
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPARK_SUBMIT_PACKAGES=org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.0
      - SPARK_LOG_DIR=/opt/spark/logs
    ports:
      - "4040:4040"  # Spark Application UI
    depends_on:
      - kafka
      - spark-master
      - spark-history-server

  baseline:
    build:
      context: .
      dockerfile: dockerfile.stream_baseline
    container_name: stream_baseline
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - kafka
    restart: on-failure

  fake_producer:
    build:
      context: .
      dockerfile: dockerfile.fake_tweetsProducer
    container_name: fake_producer
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - baseline
      - spark
    restart: on-failure

volumes:
  spark-logs: